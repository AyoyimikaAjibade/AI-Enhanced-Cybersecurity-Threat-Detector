version: '3.8'

services:
  # Backend API service
  backend:
    build: ./backend
    container_name: cybersecurity-backend
    restart: always
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
    networks:
      - app-network

  # Frontend service
  frontend:
    build: ./frontend
    container_name: cybersecurity-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  # PostgreSQL database
  db:
    image: postgres:13-alpine
    container_name: cybersecurity-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cybersecurity
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Redis for caching and real-time features
  redis:
    image: redis:6-alpine
    container_name: cybersecurity-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # pgAdmin for database management (optional, for development)
  pgadmin:
    image: dpage/pgadmin4
    container_name: cybersecurity-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
